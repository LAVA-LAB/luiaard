mdp

const double p = 0.15;
const double q = 0.1;
const int M = 9;
const int N = 9;

formula trapped = (x=0 & y=4) | (x=1 & y=4) | (x=3 & y=4) | (x=4 & y=4) | (x=5 & y=4) | (x=8 & y=4) | (x=9 & y=4) | (x=4 & y=0) | (x=4 & y=1) | (x=4 & y=3) | (x=4 & y=4) | (x=4 & y=5) | (x=4 & y=8) | (x=4 & y=9);

module grid

	x : [0..M] init 0;
	y : [0..N] init 0;


	//[up] true -> 1-p : (y'=max(y-1,0)) + p : (x'=0) & (y'=0);
	//[down] true -> 1-p : (y'=min(y+1,9)) + p : (x'=0) & (y'=0);
	//[left] true -> 1-p : (x'=max(x-1,0)) + p : (x'=0) & (y'=0);
	//[right] true -> 1-p : (x'=min(x+1,9)) + p : (x'=0) & (y'=0);


	[up] !trapped -> 1-3*p : (y'=max(y-1,0)) + p : (x'=max(x-1,0)) + p : (y'=min(y+1,N)) + p : (x'=min(x+1,M));
	[down] !trapped -> 1-3*p : (y'=min(y+1,N)) + p : (x'=max(x-1,0)) + p : (y'=max(y-1,0)) + p : (x'=min(x+1,M));
	[left] !trapped -> 1-3*p : (x'=max(x-1,0)) + p : (y'=max(y-1,0)) + p : (y'=min(y+1,N)) + p : (x'=min(x+1,M));
	[right] !trapped -> 1-3*p : (x'=min(x+1,M)) + p : (x'=max(x-1,0)) + p : (y'=max(y-1,0)) + p : (y'=min(y+1,N));

	[reset] trapped -> 1 : (x'=0) & (y'=0);
	[free] trapped -> 1-4*q : (x'=x) & (y'=y) + q : (x'=max(x-1,0)) + q : (x'=min(x+1,M)) + q : (y'=max(y-1,0)) + q : (y'=min(y+1,N));

endmodule

label "trap" = trapped;

label "goal_SE" = x=M & y=N;
label "goal_NE" = x=M & y=0;
label "goal_SW" = x=0 & y=N;
